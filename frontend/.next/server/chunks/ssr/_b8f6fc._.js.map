{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Button.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { Loader2 } from 'lucide-react';\r\nimport { cn } from '@/lib/utils'; // Impor utilitas cn untuk menggabungkan class\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary: 'bg-blue-600 text-white hover:bg-blue-600/90',\r\n        destructive: 'bg-red-600 text-white hover:bg-red-600/90',\r\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\r\n        secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-200/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-10 px-4 py-2',\r\n        sm: 'h-9 rounded-md px-3',\r\n        lg: 'h-11 rounded-md px-8',\r\n        icon: 'h-10 w-10', // Menambahkan size 'icon'\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'primary',\r\n      size: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, children, isLoading, disabled, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        disabled={isLoading || disabled}\r\n        {...props}\r\n      >\r\n        {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport default Button;\r\nexport { buttonVariants };"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA,4LAAkC,8CAA8C;AADhF;AAJA;;;;;;AAOA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,qMAAA,CAAA,UAAK,CAAC,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACtE,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACL,UAAU,aAAa;QACtB,GAAG,KAAK;;YAER,2BAAa,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;YAChC;;;;;;;AAGP;AAGF,OAAO,WAAW,GAAG;uCAEN"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/SearchBar.tsx"],"sourcesContent":["// src/components/common/SearchBar.tsx\r\n\"use client\";\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { InputField } from '@/component/common/InputField';\r\nimport { Button } from '@/component/common/Button';\r\nimport { Search } from 'lucide-react';\r\n\r\ninterface SearchBarProps {\r\n  placeholder: string;\r\n  basePath: string; // e.g., '/companies', '/blog'\r\n}\r\n\r\nexport function SearchBar({ placeholder, basePath }: SearchBarProps) {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [query, setQuery] = useState(searchParams.get('q') || '');\r\n\r\n  const handleSearch = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const currentParams = new URLSearchParams(); // Mulai dari params kosong\r\n\r\n    if (query) {\r\n      currentParams.set('q', query);\r\n    }\r\n    \r\n    router.push(`${basePath}?${currentParams.toString()}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-lg border border-gray-200 shadow-sm mb-8\">\r\n      <form onSubmit={handleSearch} className=\"flex items-center gap-2\">\r\n        <div className=\"relative w-full\">\r\n            <Search size={20} className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder={placeholder}\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              className=\"w-full h-12 pl-11 pr-4 rounded-md border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition\"\r\n            />\r\n        </div>\r\n        <Button type=\"submit\" className=\"h-12 flex-shrink-0\">\r\n          Cari\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;AAGtC;AACA;AAEA;AACA;AANA;;;;;;AAaO,SAAS,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAkB;IACjE,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,aAAa,GAAG,CAAC,QAAQ;IAE5D,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,MAAM,gBAAgB,IAAI,mBAAmB,2BAA2B;QAExE,IAAI,OAAO;YACT,cAAc,GAAG,CAAC,KAAK;QACzB;QAEA,OAAO,IAAI,CAAC,GAAG,SAAS,CAAC,EAAE,cAAc,QAAQ,IAAI;IACvD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,sMAAA,CAAA,SAAM;4BAAC,MAAM;4BAAI,WAAU;;;;;;sCAC5B,8OAAC;4BACC,MAAK;4BACL,aAAa;4BACb,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;;;;;;;;;;;;8BAGhB,8OAAC,8HAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,WAAU;8BAAqB;;;;;;;;;;;;;;;;;AAM7D"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Pagination.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from 'next/link';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { cn } from '@/lib/utils'; // Asumsi Anda punya fungsi cn (classnames)\r\n\r\ninterface PaginationProps {\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\nexport function Pagination({ totalPages, currentPage }: PaginationProps) {\r\n  const searchParams = useSearchParams();\r\n\r\n  const createPageURL = (pageNumber: number | string) => {\r\n    const params = new URLSearchParams(searchParams);\r\n    params.set('page', pageNumber.toString());\r\n    return `/jobs?${params.toString()}`;\r\n  };\r\n\r\n  if (totalPages <= 1) return null;\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center space-x-4 mt-12\">\r\n      <Link\r\n        href={createPageURL(currentPage - 1)}\r\n        className={cn(\r\n          \"flex items-center px-4 py-2 text-sm rounded-md border\",\r\n          currentPage === 1 \r\n            ? 'bg-gray-100 text-gray-400 pointer-events-none' \r\n            : 'bg-white text-gray-700 hover:bg-gray-50'\r\n        )}\r\n        aria-disabled={currentPage === 1}\r\n        tabIndex={currentPage === 1 ? -1 : undefined}\r\n      >\r\n        <ChevronLeft size={16} className=\"mr-1\" />\r\n        Previous\r\n      </Link>\r\n      \r\n      <span className=\"text-sm text-gray-600\">\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      \r\n      <Link\r\n        href={createPageURL(currentPage + 1)}\r\n        className={cn(\r\n          \"flex items-center px-4 py-2 text-sm rounded-md border\",\r\n          currentPage === totalPages\r\n            ? 'bg-gray-100 text-gray-400 pointer-events-none'\r\n            : 'bg-white text-gray-700 hover:bg-gray-50'\r\n        )}\r\n        aria-disabled={currentPage === totalPages}\r\n        tabIndex={currentPage === totalPages ? -1 : undefined}\r\n      >\r\n        Next\r\n        <ChevronRight size={16} className=\"ml-1\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAEA,4LAAkC,2CAA2C;AAD7E;AAAA;AAJA;;;;;;AAYO,SAAS,WAAW,EAAE,UAAU,EAAE,WAAW,EAAmB;IACrE,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,MAAM,gBAAgB,CAAC;QACrB,MAAM,SAAS,IAAI,gBAAgB;QACnC,OAAO,GAAG,CAAC,QAAQ,WAAW,QAAQ;QACtC,OAAO,CAAC,MAAM,EAAE,OAAO,QAAQ,IAAI;IACrC;IAEA,IAAI,cAAc,GAAG,OAAO;IAE5B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAI;gBACH,MAAM,cAAc,cAAc;gBAClC,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EACV,yDACA,gBAAgB,IACZ,kDACA;gBAEN,iBAAe,gBAAgB;gBAC/B,UAAU,gBAAgB,IAAI,CAAC,IAAI;;kCAEnC,8OAAC,oNAAA,CAAA,cAAW;wBAAC,MAAM;wBAAI,WAAU;;;;;;oBAAS;;;;;;;0BAI5C,8OAAC;gBAAK,WAAU;;oBAAwB;oBAChC;oBAAY;oBAAK;;;;;;;0BAGzB,8OAAC,4JAAA,CAAA,UAAI;gBACH,MAAM,cAAc,cAAc;gBAClC,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EACV,yDACA,gBAAgB,aACZ,kDACA;gBAEN,iBAAe,gBAAgB;gBAC/B,UAAU,gBAAgB,aAAa,CAAC,IAAI;;oBAC7C;kCAEC,8OAAC,sNAAA,CAAA,eAAY;wBAAC,MAAM;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAI1C"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/services/jobService.ts"],"sourcesContent":["// src/services/jobService.ts\r\n\r\n// --- DEFINISI TIPE YANG KONSISTEN ---\r\n// Tipe ini akan menjadi satu-satunya sumber kebenaran dan digunakan di semua komponen.\r\n// src/services/jobService.ts\r\n\r\nexport interface ICompany {\r\n  id: number | string;\r\n  name: string;\r\n  logoUrl: string;\r\n}\r\n\r\n// --- Definisi Tipe untuk Data Pekerjaan (Single Source of Truth) ---\r\nexport interface IJob {\r\n  id: number | string;\r\n  title: string;\r\n  company: {\r\n    name: string;\r\n    logoUrl?: string;\r\n  };\r\n  location: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  postedAt: string; // ISO string date\r\n  salaryMin?: number;\r\n  salaryMax?: number;\r\n}\r\n\r\nexport interface IJobDetail {\r\n  id: number | string;\r\n  title: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  location: string;\r\n  description: string;\r\n  responsibilities: string[];\r\n  qualifications: string[];\r\n  postedDate: string; // ISO String\r\n  company: ICompany;\r\n}\r\n\r\n// Tipe untuk respons API yang hanya berisi daftar pekerjaan\r\nexport interface IJobsResponse {\r\n  data: IJob[];\r\n}\r\n\r\nconst mockJobDatabase: IJobDetail[] = [\r\n    { \r\n        id: 1, \r\n        title: \"Senior Frontend Developer (React)\", \r\n        type: \"Full-time\", \r\n        location: \"Jakarta, Indonesia (Hybrid)\",\r\n        description: \"Kami mencari seorang Frontend Developer berpengalaman untuk memimpin pengembangan antarmuka pengguna yang inovatif dan berperforma tinggi. Anda akan berkolaborasi erat dengan tim produk, desainer UI/UX, dan backend engineer untuk mengubah visi menjadi produk nyata yang digunakan oleh jutaan orang.\",\r\n        responsibilities: [\r\n            \"Mengembangkan dan memelihara komponen UI yang reusable dan efisien menggunakan React.js dan TypeScript.\",\r\n            \"Menerjemahkan desain dan wireframe dari Figma menjadi kode berkualitas tinggi.\",\r\n            \"Mengoptimalkan komponen untuk kecepatan dan skalabilitas maksimum di berbagai perangkat dan browser.\",\r\n            \"Berkolaborasi dengan backend developer untuk mengintegrasikan RESTful API dan GraphQL.\",\r\n            \"Menulis pengujian unit dan integrasi untuk memastikan kualitas dan keandalan kode.\"\r\n        ],\r\n        qualifications: [\r\n            \"Gelar Sarjana di bidang Ilmu Komputer atau bidang terkait.\",\r\n            \"Pengalaman minimal 4 tahun dalam pengembangan frontend.\",\r\n            \"Keahlian mendalam pada React.js, TypeScript, HTML5, dan CSS3/SASS.\",\r\n            \"Pengalaman dengan state management library seperti Redux Toolkit atau Zustand.\",\r\n            \"Memahami prinsip-prinsip desain responsif dan mobile-first.\"\r\n        ],\r\n        postedDate: \"2025-08-01T10:00:00Z\",\r\n        company: { id: 1, name: \"PT Teknologi Bersama\", logoUrl: \"https://placehold.co/128x128/000000/FFFFFF?text=TB\" }\r\n    },\r\n    { \r\n        id: 2, \r\n        title: \"UI/UX Designer\", \r\n        type: \"Contract\", \r\n        location: \"Surabaya, Indonesia\",\r\n        description: \"Bergabunglah dengan tim kami untuk merancang pengalaman pengguna yang intuitif dan menarik secara visual untuk produk keuangan kami. Anda akan bertanggung jawab atas seluruh proses desain, dari riset hingga prototipe interaktif.\",\r\n        responsibilities: [\r\n            \"Melakukan riset pengguna untuk memahami kebutuhan dan masalah.\",\r\n            \"Membuat wireframe, user flow, dan prototipe interaktif.\",\r\n            \"Merancang antarmuka yang indah dan fungsional.\",\r\n            \"Berkolaborasi dengan tim produk dan engineer.\"\r\n        ],\r\n        qualifications: [\r\n            \"Portofolio yang kuat dalam desain UI/UX.\",\r\n            \"Mahir menggunakan Figma, Sketch, atau Adobe XD.\",\r\n            \"Pengalaman dengan design systems.\",\r\n            \"Kemampuan komunikasi yang baik.\"\r\n        ],\r\n        postedDate: \"2025-07-28T14:30:00Z\",\r\n        company: { id: 2, name: \"Solusi Keuangan Nusantara\", logoUrl: \"https://placehold.co/128x128/1d4ed8/FFFFFF?text=SKN\" }\r\n    },\r\n];\r\n\r\n// --- PERBAIKAN: Membuat dan mengekspor fungsi getFeaturedJobs ---\r\n/**\r\n * Mengambil data pekerjaan unggulan (featured jobs) dari API.\r\n * @param params - Objek filter, misalnya kategori atau limit.\r\n * @returns Promise yang berisi daftar pekerjaan unggulan.\r\n */\r\nexport const getFeaturedJobs = async (params: { category?: string; limit?: number }): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching featured jobs with params:\", params);\r\n  try {\r\n    const limit = params.limit || 4;\r\n\r\n    // Simulasi data pekerjaan unggulan\r\n    const mockJobs: IJob[] = Array.from({ length: limit }, (_, i) => ({\r\n      id: 200 + i,\r\n      title: `Senior ${params.category?.toUpperCase() || 'Tech'} Engineer #${i + 1}`,\r\n      company: { name: `Innovate Solutions ${i + 1}` },\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 48).toISOString(),\r\n      salaryMin: 15000000,\r\n    }));\r\n\r\n    // Simulasi penundaan jaringan\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    // Mengembalikan data dengan struktur yang diharapkan\r\n    return {\r\n      data: mockJobs\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching featured jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan unggulan.');\r\n  }\r\n};\r\n\r\nexport async function getAllJobIds() {\r\n    // Di aplikasi nyata, ini bisa berupa query API yang lebih efisien.\r\n    return mockJobDatabase.map(job => ({\r\n        id: job.id.toString(),\r\n    }));\r\n}\r\n\r\nexport async function getJobDetails(id: string): Promise<IJobDetail | null> {\r\n    console.log(`[SERVICE] Mencari detail untuk pekerjaan dengan ID: ${id}`);\r\n    // Simulasi penundaan jaringan seperti memanggil API sungguhan\r\n    await new Promise(resolve => setTimeout(resolve, 100)); \r\n    const job = mockJobDatabase.find(j => j.id.toString() === id);\r\n    return job || null;\r\n}\r\n// Anda juga bisa menambahkan fungsi getAllJobs di sini jika belum ada\r\n// export const getAllJobs = async (...) => { ... };\r\n\r\n\r\n// Tipe untuk metadata pagination dari API\r\nexport interface IPaginationMeta {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  perPage: number;\r\n}\r\n\r\n// Tipe untuk keseluruhan respons API\r\nexport interface IJobApiResponse {\r\n  data: IJob[];\r\n  meta: IPaginationMeta;\r\n}\r\n\r\n// Tipe untuk filter yang dikirim ke API\r\ninterface JobFilters {\r\n  keyword?: string;\r\n  location?: string;\r\n  type?: string;\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\nexport const getRecommendedJobs = async (): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching recommended jobs for authenticated user...\");\r\n  try {\r\n    // Simulasi data rekomendasi yang beragam\r\n    const mockJobs: IJob[] = [\r\n      { id: 301, title: 'Data Scientist (AI Focus)', company: { name: 'Data Insights Co.' }, location: 'Yogyakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 18000000 },\r\n      { id: 302, title: 'Senior Product Manager', company: { name: 'Agile Product House' }, location: 'Jakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 25000000 },\r\n      { id: 303, title: 'Cloud DevOps Engineer (AWS)', company: { name: 'CloudNet Solutions' }, location: 'Remote', type: 'Contract', postedAt: new Date().toISOString() },\r\n      { id: 304, title: 'Lead Mobile Developer (React Native)', company: { name: 'MobileFirst Apps' }, location: 'Bandung', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 22000000 },\r\n    ];\r\n    // Simulasi penundaan jaringan agar loading spinner terlihat\r\n    await new Promise(resolve => setTimeout(resolve, 800)); \r\n    return { data: mockJobs };\r\n  } catch (error) {\r\n    console.error('Error fetching recommended jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan rekomendasi.');\r\n  }\r\n};\r\n/**\r\n * Mengambil data pekerjaan dari API dengan filter dan pagination.\r\n */\r\nexport const getAllJobs = async (filters: JobFilters = {}): Promise<IJobApiResponse> => {\r\n  console.log(\"Fetching jobs with filters:\", filters);\r\n  try {\r\n    const page = filters.page || 1;\r\n    const limit = filters.limit || 5; // Tampilkan 5 pekerjaan per halaman\r\n\r\n    // --- Data Placeholder untuk simulasi ---\r\n    const mockJobs: IJob[] = Array.from({ length: 23 }, (_, i) => ({\r\n      id: i + 1,\r\n      title: `Software Engineer #${i + 1}`,\r\n      company: { name: `Tech Company ${i % 5}` },\r\n      location: i % 3 === 0 ? 'Jakarta' : 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 24).toISOString(),\r\n      description: 'Deskripsi pekerjaan yang menarik.'\r\n    }));\r\n\r\n    // Simulasi filter\r\n    const filteredJobs = mockJobs.filter(job => {\r\n        const keywordMatch = filters.keyword ? job.title.toLowerCase().includes(filters.keyword.toLowerCase()) : true;\r\n        // ... tambahkan logika filter lain\r\n        return keywordMatch;\r\n    });\r\n\r\n    const totalItems = filteredJobs.length;\r\n    const totalPages = Math.ceil(totalItems / limit);\r\n    const paginatedData = filteredJobs.slice((page - 1) * limit, page * limit);\r\n    \r\n    // Simulasi respons API\r\n    return await Promise.resolve({\r\n      data: paginatedData,\r\n      meta: {\r\n        currentPage: page,\r\n        totalPages: totalPages,\r\n        totalItems: totalItems,\r\n        perPage: limit,\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching jobs:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/SectionTitle.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface SectionTitleProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  className?: string;\r\n  // Prop 'as' allows you to change the heading tag (h1, h2, etc.) for better SEO and semantics.\r\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n}\r\n\r\nconst SectionTitle = ({ \r\n  title, \r\n  subtitle, \r\n  align = 'left', // Defaulting to 'left' is often more versatile for dashboard layouts.\r\n  className,\r\n  as: HeadingTag = 'h2' // The component will render an `h2` tag by default.\r\n}: SectionTitleProps) => {\r\n  \r\n  // A cleaner way to map props to Tailwind classes.\r\n  const alignmentClasses = {\r\n    left: 'items-start text-left',\r\n    center: 'items-center text-center',\r\n    right: 'items-end text-right',\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col\", alignmentClasses[align], className)}>\r\n      <HeadingTag className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n        {title}\r\n      </HeadingTag>\r\n      {subtitle && (\r\n        <p className={cn(\"mt-3 max-w-2xl text-md text-gray-600\")}>\r\n          {subtitle}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- FIX: Changed from a named export to a default export. ---\r\nexport default SectionTitle;\r\n"],"names":[],"mappings":";;;;AACA;;;AAWA,MAAM,eAAe,CAAC,EACpB,KAAK,EACL,QAAQ,EACR,QAAQ,MAAM,EACd,SAAS,EACT,IAAI,aAAa,KAAK,oDAAoD;AAArD,EACH;IAElB,kDAAkD;IAClD,MAAM,mBAAmB;QACvB,MAAM;QACN,QAAQ;QACR,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,gBAAgB,CAAC,MAAM,EAAE;;0BAC3D,8OAAC;gBAAW,WAAU;0BACnB;;;;;;YAEF,0BACC,8OAAC;gBAAE,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE;0BACd;;;;;;;;;;;;AAKX;uCAGe"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobCard.tsx"],"sourcesContent":["// src/components/job/JobCard.tsx\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\n// --- PERBAIKAN: Gunakan tipe IJob yang konsisten dari service ---\r\nimport type { IJob } from '@/services/jobService';\r\nimport { MapPin, Briefcase, Clock, Building } from 'lucide-react';\r\n\r\n// Fungsi helper untuk format waktu yang lebih informatif\r\nconst timeAgo = (dateString: string): string => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\r\n  let interval = seconds / 31536000;\r\n  if (interval > 1) return Math.floor(interval) + \" tahun lalu\";\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) return Math.floor(interval) + \" bulan lalu\";\r\n  interval = seconds / 86400;\r\n  if (interval > 1) return Math.floor(interval) + \" hari lalu\";\r\n  interval = seconds / 3600;\r\n  if (interval > 1) return Math.floor(interval) + \" jam lalu\";\r\n  interval = seconds / 60;\r\n  if (interval > 1) return Math.floor(interval) + \" menit lalu\";\r\n  return \"Baru saja\";\r\n};\r\n\r\n// --- PERBAIKAN: Pastikan prop `job` menggunakan tipe IJob ---\r\nexport const JobCard = ({ job }: { job: IJob }) => {\r\n  return (\r\n    <Link href={`/jobs/${job.id}`} className=\"block p-5 bg-white border border-gray-200 rounded-lg shadow-sm hover:border-blue-600 hover:shadow-lg transition-all duration-300 ease-in-out\">\r\n      <div className=\"flex items-start gap-4\">\r\n        <div className=\"flex-shrink-0\">\r\n          <img\r\n            className=\"w-16 h-16 bg-gray-100 rounded-md object-cover border\"\r\n            // --- PERBAIKAN: Akses properti logo dari `job.company.logoUrl` ---\r\n            src={job.company?.logoUrl || `https://ui-avatars.com/api/?name=${job.company?.name?.charAt(0)}&background=f0f4ff&color=4f46e5`}\r\n            alt={`${job.company?.name} logo`}\r\n            width={64}\r\n            height={64}\r\n          />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          {/* --- PERBAIKAN: Akses nama perusahaan dari `job.company.name` --- */}\r\n          <p className=\"text-sm font-semibold text-blue-600 flex items-center gap-1.5\"><Building size={14} /> {job.company?.name || 'Perusahaan'}</p>\r\n          <h3 className=\"text-lg font-bold text-gray-900 mt-1 hover:text-blue-700\">{job.title}</h3>\r\n          <div className=\"mt-3 flex flex-wrap gap-x-5 gap-y-2 text-sm text-gray-500\">\r\n            {job.location && <span className=\"flex items-center gap-1.5\"><MapPin size={14} /> {job.location}</span>}\r\n            {job.type && <span className=\"flex items-center gap-1.5\"><Briefcase size={14} /> {job.type}</span>}\r\n            {job.postedAt && <span className=\"flex items-center gap-1.5\"><Clock size={14} /> {timeAgo(job.postedAt)}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AAGA;AAAA;AAAA;AAAA;;;;AAEA,yDAAyD;AACzD,MAAM,UAAU,CAAC;IACf,IAAI,CAAC,YAAY,OAAO;IACxB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IACrE,IAAI,WAAW,UAAU;IACzB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,OAAO;AACT;AAGO,MAAM,UAAU,CAAC,EAAE,GAAG,EAAiB;IAC5C,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAAE,WAAU;kBACvC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAU;wBACV,oEAAoE;wBACpE,KAAK,IAAI,OAAO,EAAE,WAAW,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE,MAAM,OAAO,GAAG,+BAA+B,CAAC;wBAC9H,KAAK,GAAG,IAAI,OAAO,EAAE,KAAK,KAAK,CAAC;wBAChC,OAAO;wBACP,QAAQ;;;;;;;;;;;8BAGZ,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAE,WAAU;;8CAAgE,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,MAAM;;;;;;gCAAM;gCAAE,IAAI,OAAO,EAAE,QAAQ;;;;;;;sCAC1H,8OAAC;4BAAG,WAAU;sCAA4D,IAAI,KAAK;;;;;;sCACnF,8OAAC;4BAAI,WAAU;;gCACZ,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,0MAAA,CAAA,SAAM;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,QAAQ;;;;;;;gCAC9F,IAAI,IAAI,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,4MAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,IAAI;;;;;;;gCACzF,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,oMAAA,CAAA,QAAK;4CAAC,MAAM;;;;;;wCAAM;wCAAE,QAAQ,IAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlH"}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/RecommendedJobs.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuthStore } from '@/store/authStore';\r\nimport { getRecommendedJobs, type IJob } from '@/services/jobService';\r\nimport SectionTitle from '@/component/common/SectionTitle'; // PERBAIKAN: Impor sebagai default\r\nimport JobCard from '@/component/job/JobCard'; // PERBAIKAN: Impor sebagai default\r\nimport { Loader2 } from 'lucide-react';\r\n\r\nexport function RecommendedJobs() {\r\n  const isAuthenticated = useAuthStore(state => state.isAuthenticated);\r\n  const [recommendedJobs, setRecommendedJobs] = useState<IJob[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      const fetchRecommendations = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await getRecommendedJobs();\r\n          setRecommendedJobs(response.data);\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch recommendations:\", error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      fetchRecommendations();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n  \r\n  if (isLoading) {\r\n    return (\r\n        <section className=\"mt-20\">\r\n            <SectionTitle\r\n                title=\"Pekerjaan yang Direkomendasikan untuk Anda\"\r\n                subtitle=\"Berdasarkan profil dan aktivitas Anda, kami sedang mencari peluang terbaik.\"\r\n            />\r\n            <div className=\"flex justify-center items-center h-40\">\r\n                <Loader2 className=\"animate-spin text-blue-600\" size={32} />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n\r\n  if (recommendedJobs.length === 0) {\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"mt-20\">\r\n      <SectionTitle\r\n        title=\"Pekerjaan yang Direkomendasikan untuk Anda\"\r\n        subtitle=\"Berdasarkan profil dan aktivitas Anda, kami menemukan peluang ini.\"\r\n      />\r\n      <div className=\"mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {recommendedJobs.map(job => (\r\n          <JobCard key={job.id} job={job} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA,uOAA4D,mCAAmC;AAC/F,uNAA+C,mCAAmC;AAClF;AAPA;;;;;;;;AASO,SAAS;IACd,MAAM,kBAAkB,CAAA,GAAA,kHAAA,CAAA,eAAY,AAAD,EAAE,CAAA,QAAS,MAAM,eAAe;IACnE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,iBAAiB;YACnB,MAAM,uBAAuB;gBAC3B,aAAa;gBACb,IAAI;oBACF,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,qBAAkB,AAAD;oBACxC,mBAAmB,SAAS,IAAI;gBAClC,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,oCAAoC;gBACpD,SAAU;oBACR,aAAa;gBACf;YACF;YACA;QACF;IACF,GAAG;QAAC;KAAgB;IAEpB,IAAI,CAAC,iBAAiB;QACpB,OAAO;IACT;IAEA,IAAI,WAAW;QACb,qBACI,8OAAC;YAAQ,WAAU;;8BACf,8OAAC,oIAAA,CAAA,UAAY;oBACT,OAAM;oBACN,UAAS;;;;;;8BAEb,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,iNAAA,CAAA,UAAO;wBAAC,WAAU;wBAA6B,MAAM;;;;;;;;;;;;;;;;;IAIpE;IAEA,IAAI,gBAAgB,MAAM,KAAK,GAAG;QAC9B,OAAO;IACX;IAEA,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC,oIAAA,CAAA,UAAY;gBACX,OAAM;gBACN,UAAS;;;;;;0BAEX,8OAAC;gBAAI,WAAU;0BACZ,gBAAgB,GAAG,CAAC,CAAA,oBACnB,8OAAC,4HAAA,CAAA,UAAO;wBAAc,KAAK;uBAAb,IAAI,EAAE;;;;;;;;;;;;;;;;AAK9B"}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/CompanyCategoryFilters.tsx"],"sourcesContent":["// src/component/company/CompanyCategoryFilters.tsx\r\n\r\n'use client'; // Komponen ini harus interaktif, jadi kita tandai sebagai Client Component.\r\n\r\nimport { useState, useEffect, useTransition } from 'react';\r\nimport { useSearchParams, useRouter, usePathname } from 'next/navigation';\r\nimport { cn } from '@/lib/utils';\r\n\r\n// Definisikan tipe untuk kategori agar kode lebih aman\r\ninterface Category {\r\n  id: number;\r\n  name: string;\r\n  slug: string;\r\n}\r\n\r\n// Fungsi untuk mengambil data kategori dari API (dengan data simulasi sebagai fallback)\r\nasync function getCategories(): Promise<Category[]> {\r\n  try {\r\n    // Ganti dengan URL API Anda yang sebenarnya\r\n    // const response = await fetch('/api/v1/data/company-specializations'); \r\n    // if (!response.ok) throw new Error('Gagal mengambil kategori');\r\n    // const data = await response.json();\r\n    // return data.data || [];\r\n\r\n    // --- Data Simulasi (ganti dengan fetch API di atas) ---\r\n    await new Promise(resolve => setTimeout(resolve, 700)); // Simulasi delay jaringan\r\n    return [\r\n        { id: 2, name: 'Website', slug: 'website' },\r\n        { id: 3, name: 'Cyber Security', slug: 'cyber-security' },\r\n        { id: 4, name: 'Network', slug: 'network' },\r\n        { id: 5, name: 'Data', slug: 'data' },\r\n        { id: 6, name: 'Design', slug: 'design' },\r\n        { id: 7, name: 'Android', slug: 'android' },\r\n    ];\r\n    // --- Akhir Data Simulasi ---\r\n\r\n  } catch (error) {\r\n    console.error(\"Error fetching categories:\", error);\r\n    return []; // Kembalikan array kosong jika terjadi error\r\n  }\r\n}\r\n\r\nexport function CompanyCategoryFilters() {\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  const searchParams = useSearchParams();\r\n  \r\n  // --- FIX: Gunakan array untuk menyimpan kategori yang dipilih ---\r\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\r\n\r\n  // Sinkronkan state dengan URL saat komponen pertama kali dimuat atau URL berubah\r\n  useEffect(() => {\r\n    const categoriesFromUrl = searchParams.get('category')?.split(',') || [];\r\n    setSelectedCategories(categoriesFromUrl.filter(Boolean)); // Filter string kosong\r\n  }, [searchParams]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchAndSetCategories = async () => {\r\n      setIsLoading(true);\r\n      const fetchedData = await getCategories();\r\n      // Tombol \"Relevan\" tidak lagi diperlukan dalam mode multi-pilih,\r\n      // karena pengguna bisa mengosongkan pilihan untuk melihat semua.\r\n      setCategories(fetchedData);\r\n      setIsLoading(false);\r\n    };\r\n    \r\n    fetchAndSetCategories();\r\n  }, []);\r\n  \r\n  // --- FIX: Logika baru untuk menangani multi-pilihan ---\r\n  const handleFilterClick = (slug: string) => {\r\n    const params = new URLSearchParams(searchParams);\r\n    \r\n    // Buat salinan dari state saat ini\r\n    const newSelected = new Set(selectedCategories);\r\n\r\n    if (newSelected.has(slug)) {\r\n      newSelected.delete(slug); // Hapus jika sudah ada (toggle off)\r\n    } else {\r\n      newSelected.add(slug); // Tambah jika belum ada (toggle on)\r\n    }\r\n\r\n    const newCategoriesArray = Array.from(newSelected);\r\n\r\n    if (newCategoriesArray.length > 0) {\r\n      params.set('category', newCategoriesArray.join(','));\r\n    } else {\r\n      params.delete('category'); // Hapus parameter jika tidak ada yang dipilih\r\n    }\r\n    \r\n    params.set('page', '1'); \r\n    \r\n    startTransition(() => {\r\n      router.push(`${pathname}?${params.toString()}`);\r\n    });\r\n  };\r\n\r\n  // Loading state dengan skeleton UI yang modern\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center p-1 bg-slate-100 dark:bg-slate-800 rounded-full h-12 animate-pulse\">\r\n         <div className=\"h-9 w-full bg-slate-200 dark:bg-slate-700 rounded-full\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // Container modern dengan padding dan background\r\n    <div className=\"flex items-center justify-center flex-wrap gap-2 md:gap-3 p-1 bg-slate-100 dark:bg-slate-800 rounded-full shadow-inner\">\r\n      {/* Tombol \"Relevan\" (Semua Kategori) dengan logika khusus */}\r\n      <button\r\n          onClick={() => handleFilterClick('relevant')}\r\n          disabled={isPending}\r\n          className={cn(\r\n            \"px-4 py-2 text-sm font-semibold rounded-full transition-all duration-300 ease-in-out transform\",\r\n            \"focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-100 dark:focus:ring-offset-slate-800 focus:ring-blue-500\",\r\n            \"disabled:opacity-60 disabled:cursor-not-allowed\",\r\n            selectedCategories.length === 0\r\n              ? \"bg-slate-900 text-white dark:bg-white dark:text-slate-900 shadow-md scale-105\"\r\n              : \"bg-slate-100 text-slate-600 dark:bg-slate-800 dark:text-slate-300 hover:bg-white/80 dark:hover:bg-slate-700/80\"\r\n          )}\r\n      >\r\n          Relevan\r\n      </button>\r\n\r\n      {categories.map((category) => (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => handleFilterClick(category.slug)}\r\n          disabled={isPending}\r\n          className={cn(\r\n            \"px-4 py-2 text-sm font-semibold rounded-full transition-all duration-300 ease-in-out transform\",\r\n            \"focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-100 dark:focus:ring-offset-slate-800 focus:ring-blue-500\",\r\n            \"disabled:opacity-60 disabled:cursor-not-allowed\",\r\n            // --- FIX: Cek apakah slug ada di dalam array ---\r\n            selectedCategories.includes(category.slug)\r\n              ? \"bg-slate-900 text-white dark:bg-white dark:text-slate-900 shadow-md scale-105\"\r\n              : \"bg-slate-100 text-slate-600 dark:bg-slate-800 dark:text-slate-300 hover:bg-white/80 dark:hover:bg-slate-700/80\"\r\n          )}\r\n        >\r\n          {category.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}