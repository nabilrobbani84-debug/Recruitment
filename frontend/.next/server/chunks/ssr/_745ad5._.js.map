{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/services/companyService.ts"],"sourcesContent":["// src/services/companyService.ts\r\n\r\n// --- 1. Definisi Tipe yang Jelas & Detail ---\r\n\r\n// Tipe untuk mendefinisikan struktur data sebuah perusahaan\r\n// Ini akan menjadi satu-satunya sumber kebenaran (single source of truth) untuk data perusahaan.\r\nexport interface ICompany {\r\n  id: number;\r\n  name: string;\r\n  logoUrl: string;\r\n  industry: string;\r\n  location: string;\r\n  totalJobs: number;\r\n  tagline: string;\r\n  isHiring: boolean;\r\n}\r\n\r\n// Tipe untuk parameter filter yang bisa dikirim ke API\r\nexport interface GetCompaniesParams {\r\n  page?: number;\r\n  limit?: number;\r\n  search?: string; // Untuk pencarian berdasarkan nama\r\n  location?: string;\r\n  industry?: string;\r\n}\r\n\r\n// Tipe untuk metadata pagination yang dikembalikan oleh API\r\nexport interface IPaginationMeta {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  perPage: number;\r\n}\r\n\r\n// Tipe untuk keseluruhan struktur respons dari API getCompanies\r\nexport interface ICompanyApiResponse {\r\n  companies: ICompany[];\r\n  totalCompanies: number;\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\n\r\n// --- 2. Implementasi Fungsi Service ---\r\n\r\n/**\r\n * Fungsi untuk mengambil data perusahaan dari API dengan filter dan pagination.\r\n * Diekspor sebagai 'named export' agar bisa diimpor secara spesifik.\r\n * @param params - Objek yang berisi filter seperti halaman, pencarian, dll.\r\n * @returns Promise yang berisi data perusahaan dan metadata pagination.\r\n */\r\nexport const getCompanies = async (params: GetCompaniesParams = {}): Promise<ICompanyApiResponse> => {\r\n  console.log(\"Fetching companies with params:\", params);\r\n  \r\n  try {\r\n    // Menyiapkan nilai default untuk pagination\r\n    const page = params.page || 1;\r\n    const limit = params.limit || 12; // 12 perusahaan per halaman\r\n\r\n    // --- Simulasi Data & Logika Backend ---\r\n    // Di aplikasi nyata, bagian ini akan diganti dengan panggilan API menggunakan fetch atau Axios.\r\n    // Contoh: const response = await apiClient.get('/companies', { params });\r\n\r\n    // Buat data dummy yang banyak untuk simulasi\r\n    const allMockCompanies: ICompany[] = Array.from({ length: 35 }, (_, i) => ({\r\n      id: i + 1,\r\n      name: `Perusahaan ${['Inovasi', 'Teknologi', 'Digital', 'Kreatif', 'Maju'][i % 5]} #${i + 1}`,\r\n      logoUrl: `https://placehold.co/100x100/e0e7ff/4338ca?text=P${i + 1}`,\r\n      industry: ['Teknologi Informasi', 'Keuangan', 'Kesehatan', 'Pendidikan', 'Retail'][i % 5],\r\n      location: ['Jakarta', 'Bandung', 'Surabaya', 'Remote'][i % 4],\r\n      totalJobs: 3 + (i % 10),\r\n      tagline: 'Membangun masa depan digital.',\r\n      isHiring: i % 2 === 0,\r\n    }));\r\n\r\n    // Simulasi logika filter di backend\r\n    const filteredCompanies = allMockCompanies.filter(company => {\r\n      const searchMatch = params.search \r\n        ? company.name.toLowerCase().includes(params.search.toLowerCase()) \r\n        : true;\r\n      const locationMatch = params.location \r\n        ? company.location === params.location \r\n        : true;\r\n      // ... tambahkan logika filter lain di sini ...\r\n      return searchMatch && locationMatch;\r\n    });\r\n\r\n    // Simulasi logika pagination di backend\r\n    const totalItems = filteredCompanies.length;\r\n    const totalPages = Math.ceil(totalItems / limit);\r\n    const paginatedData = filteredCompanies.slice((page - 1) * limit, page * limit);\r\n\r\n    // Simulasi penundaan jaringan (network delay)\r\n    await new Promise(resolve => setTimeout(resolve, 500)); \r\n\r\n    // Mengembalikan data dengan struktur yang diharapkan oleh frontend\r\n    return {\r\n      companies: paginatedData,\r\n      totalCompanies: totalItems,\r\n      totalPages: totalPages,\r\n      currentPage: page,\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching companies:', error);\r\n    // Jika terjadi error, lempar kembali agar bisa ditangani oleh komponen pemanggil\r\n    throw new Error('Gagal mengambil data perusahaan dari server.');\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,iCAAiC;AAEjC,+CAA+C;AAE/C,4DAA4D;AAC5D,iGAAiG;;;;AA8C1F,MAAM,eAAe,OAAO,SAA6B,CAAC,CAAC;IAChE,QAAQ,GAAG,CAAC,mCAAmC;IAE/C,IAAI;QACF,4CAA4C;QAC5C,MAAM,OAAO,OAAO,IAAI,IAAI;QAC5B,MAAM,QAAQ,OAAO,KAAK,IAAI,IAAI,4BAA4B;QAE9D,yCAAyC;QACzC,gGAAgG;QAChG,0EAA0E;QAE1E,6CAA6C;QAC7C,MAAM,mBAA+B,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAG,GAAG,CAAC,GAAG,IAAM,CAAC;gBACzE,IAAI,IAAI;gBACR,MAAM,CAAC,WAAW,EAAE;oBAAC;oBAAW;oBAAa;oBAAW;oBAAW;iBAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,GAAG;gBAC7F,SAAS,CAAC,iDAAiD,EAAE,IAAI,GAAG;gBACpE,UAAU;oBAAC;oBAAuB;oBAAY;oBAAa;oBAAc;iBAAS,CAAC,IAAI,EAAE;gBACzF,UAAU;oBAAC;oBAAW;oBAAW;oBAAY;iBAAS,CAAC,IAAI,EAAE;gBAC7D,WAAW,IAAK,IAAI;gBACpB,SAAS;gBACT,UAAU,IAAI,MAAM;YACtB,CAAC;QAED,oCAAoC;QACpC,MAAM,oBAAoB,iBAAiB,MAAM,CAAC,CAAA;YAChD,MAAM,cAAc,OAAO,MAAM,GAC7B,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,MAAM,CAAC,WAAW,MAC7D;YACJ,MAAM,gBAAgB,OAAO,QAAQ,GACjC,QAAQ,QAAQ,KAAK,OAAO,QAAQ,GACpC;YACJ,+CAA+C;YAC/C,OAAO,eAAe;QACxB;QAEA,wCAAwC;QACxC,MAAM,aAAa,kBAAkB,MAAM;QAC3C,MAAM,aAAa,KAAK,IAAI,CAAC,aAAa;QAC1C,MAAM,gBAAgB,kBAAkB,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,OAAO,OAAO;QAEzE,8CAA8C;QAC9C,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,mEAAmE;QACnE,OAAO;YACL,WAAW;YACX,gBAAgB;YAChB,YAAY;YACZ,aAAa;QACf;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,iFAAiF;QACjF,MAAM,IAAI,MAAM;IAClB;AACF"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/services/jobService.ts"],"sourcesContent":["// src/services/jobService.ts\r\n\r\n// --- DEFINISI TIPE YANG KONSISTEN ---\r\n// Tipe ini akan menjadi satu-satunya sumber kebenaran dan digunakan di semua komponen.\r\n// src/services/jobService.ts\r\n\r\nexport interface ICompany {\r\n  id: number | string;\r\n  name: string;\r\n  logoUrl: string;\r\n}\r\n\r\n// --- Definisi Tipe untuk Data Pekerjaan (Single Source of Truth) ---\r\nexport interface IJob {\r\n  id: number | string;\r\n  title: string;\r\n  company: {\r\n    name: string;\r\n    logoUrl?: string;\r\n  };\r\n  location: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  postedAt: string; // ISO string date\r\n  salaryMin?: number;\r\n  salaryMax?: number;\r\n}\r\n\r\nexport interface IJobDetail {\r\n  id: number | string;\r\n  title: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  location: string;\r\n  description: string;\r\n  responsibilities: string[];\r\n  qualifications: string[];\r\n  postedDate: string; // ISO String\r\n  company: ICompany;\r\n}\r\n\r\n// Tipe untuk respons API yang hanya berisi daftar pekerjaan\r\nexport interface IJobsResponse {\r\n  data: IJob[];\r\n}\r\n\r\nconst mockJobDatabase: IJobDetail[] = [\r\n    { \r\n        id: 1, \r\n        title: \"Senior Frontend Developer (React)\", \r\n        type: \"Full-time\", \r\n        location: \"Jakarta, Indonesia (Hybrid)\",\r\n        description: \"Kami mencari seorang Frontend Developer berpengalaman untuk memimpin pengembangan antarmuka pengguna yang inovatif dan berperforma tinggi. Anda akan berkolaborasi erat dengan tim produk, desainer UI/UX, dan backend engineer untuk mengubah visi menjadi produk nyata yang digunakan oleh jutaan orang.\",\r\n        responsibilities: [\r\n            \"Mengembangkan dan memelihara komponen UI yang reusable dan efisien menggunakan React.js dan TypeScript.\",\r\n            \"Menerjemahkan desain dan wireframe dari Figma menjadi kode berkualitas tinggi.\",\r\n            \"Mengoptimalkan komponen untuk kecepatan dan skalabilitas maksimum di berbagai perangkat dan browser.\",\r\n            \"Berkolaborasi dengan backend developer untuk mengintegrasikan RESTful API dan GraphQL.\",\r\n            \"Menulis pengujian unit dan integrasi untuk memastikan kualitas dan keandalan kode.\"\r\n        ],\r\n        qualifications: [\r\n            \"Gelar Sarjana di bidang Ilmu Komputer atau bidang terkait.\",\r\n            \"Pengalaman minimal 4 tahun dalam pengembangan frontend.\",\r\n            \"Keahlian mendalam pada React.js, TypeScript, HTML5, dan CSS3/SASS.\",\r\n            \"Pengalaman dengan state management library seperti Redux Toolkit atau Zustand.\",\r\n            \"Memahami prinsip-prinsip desain responsif dan mobile-first.\"\r\n        ],\r\n        postedDate: \"2025-08-01T10:00:00Z\",\r\n        company: { id: 1, name: \"PT Teknologi Bersama\", logoUrl: \"https://placehold.co/128x128/000000/FFFFFF?text=TB\" }\r\n    },\r\n    { \r\n        id: 2, \r\n        title: \"UI/UX Designer\", \r\n        type: \"Contract\", \r\n        location: \"Surabaya, Indonesia\",\r\n        description: \"Bergabunglah dengan tim kami untuk merancang pengalaman pengguna yang intuitif dan menarik secara visual untuk produk keuangan kami. Anda akan bertanggung jawab atas seluruh proses desain, dari riset hingga prototipe interaktif.\",\r\n        responsibilities: [\r\n            \"Melakukan riset pengguna untuk memahami kebutuhan dan masalah.\",\r\n            \"Membuat wireframe, user flow, dan prototipe interaktif.\",\r\n            \"Merancang antarmuka yang indah dan fungsional.\",\r\n            \"Berkolaborasi dengan tim produk dan engineer.\"\r\n        ],\r\n        qualifications: [\r\n            \"Portofolio yang kuat dalam desain UI/UX.\",\r\n            \"Mahir menggunakan Figma, Sketch, atau Adobe XD.\",\r\n            \"Pengalaman dengan design systems.\",\r\n            \"Kemampuan komunikasi yang baik.\"\r\n        ],\r\n        postedDate: \"2025-07-28T14:30:00Z\",\r\n        company: { id: 2, name: \"Solusi Keuangan Nusantara\", logoUrl: \"https://placehold.co/128x128/1d4ed8/FFFFFF?text=SKN\" }\r\n    },\r\n];\r\n\r\n// --- PERBAIKAN: Membuat dan mengekspor fungsi getFeaturedJobs ---\r\n/**\r\n * Mengambil data pekerjaan unggulan (featured jobs) dari API.\r\n * @param params - Objek filter, misalnya kategori atau limit.\r\n * @returns Promise yang berisi daftar pekerjaan unggulan.\r\n */\r\nexport const getFeaturedJobs = async (params: { category?: string; limit?: number }): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching featured jobs with params:\", params);\r\n  try {\r\n    const limit = params.limit || 4;\r\n\r\n    // Simulasi data pekerjaan unggulan\r\n    const mockJobs: IJob[] = Array.from({ length: limit }, (_, i) => ({\r\n      id: 200 + i,\r\n      title: `Senior ${params.category?.toUpperCase() || 'Tech'} Engineer #${i + 1}`,\r\n      company: { name: `Innovate Solutions ${i + 1}` },\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 48).toISOString(),\r\n      salaryMin: 15000000,\r\n    }));\r\n\r\n    // Simulasi penundaan jaringan\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    // Mengembalikan data dengan struktur yang diharapkan\r\n    return {\r\n      data: mockJobs\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching featured jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan unggulan.');\r\n  }\r\n};\r\n\r\nexport async function getAllJobIds() {\r\n    // Di aplikasi nyata, ini bisa berupa query API yang lebih efisien.\r\n    return mockJobDatabase.map(job => ({\r\n        id: job.id.toString(),\r\n    }));\r\n}\r\n\r\nexport async function getJobDetails(id: string): Promise<IJobDetail | null> {\r\n    console.log(`[SERVICE] Mencari detail untuk pekerjaan dengan ID: ${id}`);\r\n    // Simulasi penundaan jaringan seperti memanggil API sungguhan\r\n    await new Promise(resolve => setTimeout(resolve, 100)); \r\n    const job = mockJobDatabase.find(j => j.id.toString() === id);\r\n    return job || null;\r\n}\r\n// Anda juga bisa menambahkan fungsi getAllJobs di sini jika belum ada\r\n// export const getAllJobs = async (...) => { ... };\r\n\r\n\r\n// Tipe untuk metadata pagination dari API\r\nexport interface IPaginationMeta {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  perPage: number;\r\n}\r\n\r\n// Tipe untuk keseluruhan respons API\r\nexport interface IJobApiResponse {\r\n  data: IJob[];\r\n  meta: IPaginationMeta;\r\n}\r\n\r\n// Tipe untuk filter yang dikirim ke API\r\ninterface JobFilters {\r\n  keyword?: string;\r\n  location?: string;\r\n  type?: string;\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\nexport const getRecommendedJobs = async (): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching recommended jobs for authenticated user...\");\r\n  try {\r\n    // Simulasi data rekomendasi yang beragam\r\n    const mockJobs: IJob[] = [\r\n      { id: 301, title: 'Data Scientist (AI Focus)', company: { name: 'Data Insights Co.' }, location: 'Yogyakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 18000000 },\r\n      { id: 302, title: 'Senior Product Manager', company: { name: 'Agile Product House' }, location: 'Jakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 25000000 },\r\n      { id: 303, title: 'Cloud DevOps Engineer (AWS)', company: { name: 'CloudNet Solutions' }, location: 'Remote', type: 'Contract', postedAt: new Date().toISOString() },\r\n      { id: 304, title: 'Lead Mobile Developer (React Native)', company: { name: 'MobileFirst Apps' }, location: 'Bandung', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 22000000 },\r\n    ];\r\n    // Simulasi penundaan jaringan agar loading spinner terlihat\r\n    await new Promise(resolve => setTimeout(resolve, 800)); \r\n    return { data: mockJobs };\r\n  } catch (error) {\r\n    console.error('Error fetching recommended jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan rekomendasi.');\r\n  }\r\n};\r\n/**\r\n * Mengambil data pekerjaan dari API dengan filter dan pagination.\r\n */\r\nexport const getAllJobs = async (filters: JobFilters = {}): Promise<IJobApiResponse> => {\r\n  console.log(\"Fetching jobs with filters:\", filters);\r\n  try {\r\n    const page = filters.page || 1;\r\n    const limit = filters.limit || 5; // Tampilkan 5 pekerjaan per halaman\r\n\r\n    // --- Data Placeholder untuk simulasi ---\r\n    const mockJobs: IJob[] = Array.from({ length: 23 }, (_, i) => ({\r\n      id: i + 1,\r\n      title: `Software Engineer #${i + 1}`,\r\n      company: { name: `Tech Company ${i % 5}` },\r\n      location: i % 3 === 0 ? 'Jakarta' : 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 24).toISOString(),\r\n      description: 'Deskripsi pekerjaan yang menarik.'\r\n    }));\r\n\r\n    // Simulasi filter\r\n    const filteredJobs = mockJobs.filter(job => {\r\n        const keywordMatch = filters.keyword ? job.title.toLowerCase().includes(filters.keyword.toLowerCase()) : true;\r\n        // ... tambahkan logika filter lain\r\n        return keywordMatch;\r\n    });\r\n\r\n    const totalItems = filteredJobs.length;\r\n    const totalPages = Math.ceil(totalItems / limit);\r\n    const paginatedData = filteredJobs.slice((page - 1) * limit, page * limit);\r\n    \r\n    // Simulasi respons API\r\n    return await Promise.resolve({\r\n      data: paginatedData,\r\n      meta: {\r\n        currentPage: page,\r\n        totalPages: totalPages,\r\n        totalItems: totalItems,\r\n        perPage: limit,\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching jobs:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/CompanyCard.tsx"],"sourcesContent":["// src/components/company/CompanyCard.tsx\r\n\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { Company } from '@/lib/types';\r\nimport { MapPin, Briefcase } from 'lucide-react';\r\n\r\ninterface CompanyCardProps {\r\n  company: Company;\r\n}\r\n\r\nexport function CompanyCard({ company }: CompanyCardProps) {\r\n  return (\r\n    <Link href={`/companies/${company.id}`} className=\"block group\">\r\n      <div className=\"bg-white p-6 rounded-lg border border-gray-200 h-full flex flex-col shadow-sm hover:shadow-xl hover:border-blue-500 transition-all duration-300\">\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <Image\r\n            src={company.logoUrl}\r\n            alt={`${company.name} logo`}\r\n            width={64}\r\n            height={64}\r\n            className=\"rounded-md border p-1 object-contain\"\r\n          />\r\n          <div>\r\n            <h3 className=\"text-xl font-bold text-gray-900 group-hover:text-blue-700\">{company.name}</h3>\r\n            <p className=\"text-sm text-gray-500 flex items-center gap-1.5 mt-1\">\r\n              <MapPin size={14} /> {company.location}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-gray-600 text-sm flex-grow mb-4\">{company.tagline}</p>\r\n        <div className=\"mt-auto pt-4 border-t border-gray-100\">\r\n          <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-xs font-semibold bg-blue-100 text-blue-800\">\r\n            <Briefcase size={14} className=\"mr-2\" />\r\n            {company.activeJobsCount} Lowongan Tersedia\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n} "],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAEzC;AACA;AAEA;AAAA;;;;;AAMO,SAAS,YAAY,EAAE,OAAO,EAAoB;IACvD,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAE;QAAE,WAAU;kBAChD,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,QAAQ,OAAO;4BACpB,KAAK,GAAG,QAAQ,IAAI,CAAC,KAAK,CAAC;4BAC3B,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;sCAEZ,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAA6D,QAAQ,IAAI;;;;;;8CACvF,8OAAC;oCAAE,WAAU;;sDACX,8OAAC,0MAAA,CAAA,SAAM;4CAAC,MAAM;;;;;;wCAAM;wCAAE,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;8BAI5C,8OAAC;oBAAE,WAAU;8BAAwC,QAAQ,OAAO;;;;;;8BACpE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAK,WAAU;;0CACd,8OAAC,4MAAA,CAAA,YAAS;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAC9B,QAAQ,eAAe;4BAAC;;;;;;;;;;;;;;;;;;;;;;;AAMrC"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobCard.tsx"],"sourcesContent":["// src/components/job/JobCard.tsx\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\n// --- PERBAIKAN: Gunakan tipe IJob yang konsisten dari service ---\r\nimport type { IJob } from '@/services/jobService';\r\nimport { MapPin, Briefcase, Clock, Building } from 'lucide-react';\r\n\r\n// Fungsi helper untuk format waktu yang lebih informatif\r\nconst timeAgo = (dateString: string): string => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\r\n  let interval = seconds / 31536000;\r\n  if (interval > 1) return Math.floor(interval) + \" tahun lalu\";\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) return Math.floor(interval) + \" bulan lalu\";\r\n  interval = seconds / 86400;\r\n  if (interval > 1) return Math.floor(interval) + \" hari lalu\";\r\n  interval = seconds / 3600;\r\n  if (interval > 1) return Math.floor(interval) + \" jam lalu\";\r\n  interval = seconds / 60;\r\n  if (interval > 1) return Math.floor(interval) + \" menit lalu\";\r\n  return \"Baru saja\";\r\n};\r\n\r\n// --- PERBAIKAN: Pastikan prop `job` menggunakan tipe IJob ---\r\nexport const JobCard = ({ job }: { job: IJob }) => {\r\n  return (\r\n    <Link href={`/jobs/${job.id}`} className=\"block p-5 bg-white border border-gray-200 rounded-lg shadow-sm hover:border-blue-600 hover:shadow-lg transition-all duration-300 ease-in-out\">\r\n      <div className=\"flex items-start gap-4\">\r\n        <div className=\"flex-shrink-0\">\r\n          <img\r\n            className=\"w-16 h-16 bg-gray-100 rounded-md object-cover border\"\r\n            // --- PERBAIKAN: Akses properti logo dari `job.company.logoUrl` ---\r\n            src={job.company?.logoUrl || `https://ui-avatars.com/api/?name=${job.company?.name?.charAt(0)}&background=f0f4ff&color=4f46e5`}\r\n            alt={`${job.company?.name} logo`}\r\n            width={64}\r\n            height={64}\r\n          />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          {/* --- PERBAIKAN: Akses nama perusahaan dari `job.company.name` --- */}\r\n          <p className=\"text-sm font-semibold text-blue-600 flex items-center gap-1.5\"><Building size={14} /> {job.company?.name || 'Perusahaan'}</p>\r\n          <h3 className=\"text-lg font-bold text-gray-900 mt-1 hover:text-blue-700\">{job.title}</h3>\r\n          <div className=\"mt-3 flex flex-wrap gap-x-5 gap-y-2 text-sm text-gray-500\">\r\n            {job.location && <span className=\"flex items-center gap-1.5\"><MapPin size={14} /> {job.location}</span>}\r\n            {job.type && <span className=\"flex items-center gap-1.5\"><Briefcase size={14} /> {job.type}</span>}\r\n            {job.postedAt && <span className=\"flex items-center gap-1.5\"><Clock size={14} /> {timeAgo(job.postedAt)}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AAGA;AAAA;AAAA;AAAA;;;;AAEA,yDAAyD;AACzD,MAAM,UAAU,CAAC;IACf,IAAI,CAAC,YAAY,OAAO;IACxB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IACrE,IAAI,WAAW,UAAU;IACzB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,OAAO;AACT;AAGO,MAAM,UAAU,CAAC,EAAE,GAAG,EAAiB;IAC5C,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAAE,WAAU;kBACvC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAU;wBACV,oEAAoE;wBACpE,KAAK,IAAI,OAAO,EAAE,WAAW,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE,MAAM,OAAO,GAAG,+BAA+B,CAAC;wBAC9H,KAAK,GAAG,IAAI,OAAO,EAAE,KAAK,KAAK,CAAC;wBAChC,OAAO;wBACP,QAAQ;;;;;;;;;;;8BAGZ,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAE,WAAU;;8CAAgE,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,MAAM;;;;;;gCAAM;gCAAE,IAAI,OAAO,EAAE,QAAQ;;;;;;;sCAC1H,8OAAC;4BAAG,WAAU;sCAA4D,IAAI,KAAK;;;;;;sCACnF,8OAAC;4BAAI,WAAU;;gCACZ,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,0MAAA,CAAA,SAAM;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,QAAQ;;;;;;;gCAC9F,IAAI,IAAI,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,4MAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,IAAI;;;;;;;gCACzF,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,oMAAA,CAAA,QAAK;4CAAC,MAAM;;;;;;wCAAM;wCAAE,QAAQ,IAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlH"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/SearchBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SearchBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchBar() from the server but SearchBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/SearchBar.tsx <module evaluation>\",\n    \"SearchBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,gEACA"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/SearchBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SearchBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchBar() from the server but SearchBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/SearchBar.tsx\",\n    \"SearchBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,4CACA"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pagination = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pagination() from the server but Pagination is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/Pagination.tsx <module evaluation>\",\n    \"Pagination\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iEACA"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pagination = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pagination() from the server but Pagination is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/Pagination.tsx\",\n    \"Pagination\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6CACA"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/lib/utils.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\n/**\r\n * A utility function to conditionally join class names together.\r\n * It uses 'clsx' to handle conditional classes and 'tailwind-merge'\r\n * to intelligently merge Tailwind CSS classes without style conflicts.\r\n *\r\n * @param {...ClassValue[]} inputs - A list of class values to be merged.\r\n * These can be strings, arrays, or objects.\r\n * @returns {string} A single string of merged and optimized class names.\r\n */\r\nexport function cn(...inputs: ClassValue[]): string {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n// src/lib/utils.ts\r\nexport const timeAgo = (dateString: string): string => {\r\n  const date = new Date(dateString);\r\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\r\n  let interval = seconds / 31536000;\r\n  if (interval > 1) return Math.floor(interval) + \" tahun lalu\";\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) return Math.floor(interval) + \" bulan lalu\";\r\n  interval = seconds / 86400;\r\n  if (interval > 1) return Math.floor(interval) + \" hari lalu\";\r\n  interval = seconds / 3600;\r\n  if (interval > 1) return Math.floor(interval) + \" jam lalu\";\r\n  interval = seconds / 60;\r\n  if (interval > 1) return Math.floor(interval) + \" menit lalu\";\r\n  return \"Baru saja\";\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAWO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,MAAM,UAAU,CAAC;IACtB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IACrE,IAAI,WAAW,UAAU;IACzB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,OAAO;AACT"}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/SectionTitle.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface SectionTitleProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  className?: string;\r\n  // Prop 'as' allows you to change the heading tag (h1, h2, etc.) for better SEO and semantics.\r\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n}\r\n\r\nconst SectionTitle = ({ \r\n  title, \r\n  subtitle, \r\n  align = 'left', // Defaulting to 'left' is often more versatile for dashboard layouts.\r\n  className,\r\n  as: HeadingTag = 'h2' // The component will render an `h2` tag by default.\r\n}: SectionTitleProps) => {\r\n  \r\n  // A cleaner way to map props to Tailwind classes.\r\n  const alignmentClasses = {\r\n    left: 'items-start text-left',\r\n    center: 'items-center text-center',\r\n    right: 'items-end text-right',\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col\", alignmentClasses[align], className)}>\r\n      <HeadingTag className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n        {title}\r\n      </HeadingTag>\r\n      {subtitle && (\r\n        <p className={cn(\"mt-3 max-w-2xl text-md text-gray-600\")}>\r\n          {subtitle}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- FIX: Changed from a named export to a default export. ---\r\nexport default SectionTitle;\r\n"],"names":[],"mappings":";;;;AACA;;;AAWA,MAAM,eAAe,CAAC,EACpB,KAAK,EACL,QAAQ,EACR,QAAQ,MAAM,EACd,SAAS,EACT,IAAI,aAAa,KAAK,oDAAoD;AAArD,EACH;IAElB,kDAAkD;IAClD,MAAM,mBAAmB;QACvB,MAAM;QACN,QAAQ;QACR,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,gBAAgB,CAAC,MAAM,EAAE;;0BAC3D,8OAAC;gBAAW,WAAU;0BACnB;;;;;;YAEF,0BACC,8OAAC;gBAAE,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE;0BACd;;;;;;;;;;;;AAKX;uCAGe"}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/RecommendedJobs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RecommendedJobs = registerClientReference(\n    function() { throw new Error(\"Attempted to call RecommendedJobs() from the server but RecommendedJobs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/company/RecommendedJobs.tsx <module evaluation>\",\n    \"RecommendedJobs\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uEACA"}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/RecommendedJobs.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const RecommendedJobs = registerClientReference(\n    function() { throw new Error(\"Attempted to call RecommendedJobs() from the server but RecommendedJobs is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/company/RecommendedJobs.tsx\",\n    \"RecommendedJobs\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mDACA"}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/ui/Alert.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { AlertTriangle, CheckCircle, Info, XCircle } from \"lucide-react\";\r\n\r\nconst alertVariants = tv({\r\n  base: \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-8 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-background text-foreground\",\r\n      destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      success: \"border-green-500/50 text-green-600 dark:border-green-500 [&>svg]:text-green-500\",\r\n      info: \"border-blue-500/50 text-blue-600 dark:border-blue-500 [&>svg]:text-blue-500\",\r\n      warning: \"border-yellow-500/50 text-yellow-600 dark:border-yellow-500 [&>svg]:text-yellow-500\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst alertIcons = {\r\n  default: Info,\r\n  destructive: XCircle,\r\n  success: CheckCircle,\r\n  info: Info,\r\n  warning: AlertTriangle,\r\n};\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  const Icon = alertIcons[variant || \"default\"];\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props}\r\n    >\r\n      <Icon className=\"h-5 w-5\" />\r\n      {/* The children, like AlertTitle and AlertDescription, will be rendered here */}\r\n      <div className=\"ml-2\">{props.children}</div>\r\n    </div>\r\n  );\r\n});\r\nAlert.displayName = \"Alert\";\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-bold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertTitle.displayName = \"AlertTitle\";\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDescription.displayName = \"AlertDescription\";\r\n\r\nexport { Alert, AlertTitle, AlertDescription };"],"names":[],"mappings":";;;;;;AAAA;AAEA;AADA;AAEA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,qJAAA,CAAA,KAAE,AAAD,EAAE;IACvB,MAAM;IACN,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,MAAM;YACN,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAEA,MAAM,aAAa;IACjB,SAAS,kMAAA,CAAA,OAAI;IACb,aAAa,4MAAA,CAAA,UAAO;IACpB,SAAS,2NAAA,CAAA,cAAW;IACpB,MAAM,kMAAA,CAAA,OAAI;IACV,SAAS,wNAAA,CAAA,gBAAa;AACxB;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,MAAM,OAAO,UAAU,CAAC,WAAW,UAAU;IAC7C,qBACE,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;;;;;;0BAEhB,8OAAC;gBAAI,WAAU;0BAAQ,MAAM,QAAQ;;;;;;;;;;;;AAG3C;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,8CAA8C;QAC3D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/CompanyCategoryFilters.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompanyCategoryFilters = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompanyCategoryFilters() from the server but CompanyCategoryFilters is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/company/CompanyCategoryFilters.tsx <module evaluation>\",\n    \"CompanyCategoryFilters\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8EACA"}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/company/CompanyCategoryFilters.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CompanyCategoryFilters = registerClientReference(\n    function() { throw new Error(\"Attempted to call CompanyCategoryFilters() from the server but CompanyCategoryFilters is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/company/CompanyCategoryFilters.tsx\",\n    \"CompanyCategoryFilters\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0DACA"}},
    {"offset": {"line": 914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 930, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/app/companies/page.tsx"],"sourcesContent":["// src/app/companies/page.tsx\r\n\r\nimport React from 'react';\r\n// Impor tipe data dari sumber yang sama dengan yang digunakan oleh CompanyCard\r\nimport { type Company } from '@/lib/types'; \r\nimport { getCompanies, type GetCompaniesParams, type ICompany as ICompanyFromService } from '@/services/companyService';\r\nimport { getFeaturedJobs, type IJob } from '@/services/jobService';\r\nimport { CompanyCard } from '@/component/company/CompanyCard';\r\nimport { JobCard } from '@/component/job/JobCard';\r\nimport { SearchBar } from '@/component/common/SearchBar';\r\nimport { Pagination } from '@/component/common/Pagination';\r\nimport { SectionTitle } from '@/component/common/SectionTitle';\r\nimport { RecommendedJobs } from '@/component/company/RecommendedJobs';\r\nimport { Alert } from '@/component/ui/Alert';\r\nimport { CompanyCategoryFilters } from '@/component/company/CompanyCategoryFilters';\r\n\r\n\r\ninterface CompaniesPageProps {\r\n  searchParams: GetCompaniesParams;\r\n}\r\n\r\nexport default async function CompaniesPage({ searchParams }: CompaniesPageProps) {\r\n  let companyData: { companies: ICompanyFromService[]; totalCompanies: number; totalPages: number; currentPage: number } | null = null;\r\n  let itJobs: IJob[] = [];\r\n  let fetchError: string | null = null;\r\n\r\n  try {\r\n    const [companyResponse, itJobsResponse] = await Promise.all([\r\n      getCompanies(searchParams),\r\n      getFeaturedJobs({ category: 'it', limit: 4 }),\r\n    ]);\r\n\r\n    companyData = companyResponse;\r\n    itJobs = itJobsResponse.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch data for companies page:', error);\r\n    fetchError = 'Gagal memuat data. Silakan coba beberapa saat lagi.';\r\n  }\r\n\r\n  if (fetchError || !companyData) {\r\n    return (\r\n      <main className=\"container mx-auto px-4 py-12 flex justify-center\">\r\n        <Alert variant=\"destructive\" title=\"Terjadi Kesalahan\">\r\n          {fetchError || 'Tidak dapat memuat data perusahaan.'}\r\n        </Alert>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  const { companies, totalCompanies, totalPages, currentPage } = companyData;\r\n\r\n  // --- FIX: Transformasi data dari ICompanyFromService menjadi Company ---\r\n  // Proses ini memastikan setiap objek yang dirender memiliki semua properti yang\r\n  // dibutuhkan oleh komponen CompanyCard, dengan nilai default jika properti asli tidak ada.\r\n  const companiesForDisplay: Company[] = companies.map((companyFromService) => {\r\n    return {\r\n      // Salin semua properti yang ada dari data layanan\r\n      ...companyFromService,\r\n\r\n      // Pastikan properti yang dibutuhkan oleh CompanyCard ada dan memiliki tipe yang benar\r\n      id: companyFromService.id,\r\n      name: companyFromService.name || 'Nama Perusahaan Tidak Tersedia',\r\n      logoUrl: companyFromService.logoUrl || 'https://placehold.co/64x64/eee/ccc?text=Logo', // Fallback image\r\n      location: companyFromService.location || 'Lokasi Tidak Diketahui',\r\n      tagline: companyFromService.tagline || 'Tagline perusahaan tidak tersedia.',\r\n      \r\n      // Ini adalah properti kunci yang menyebabkan error. Pastikan selalu ada sebagai angka.\r\n      activeJobsCount: companyFromService.activeJobsCount || 0,\r\n    };\r\n  });\r\n\r\n  return (  \r\n    <main className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"container mx-auto px-4 py-12\">\r\n        <div className=\"text-center mb-10\">\r\n          <h1 className=\"text-4xl font-extrabold text-gray-900 dark:text-white tracking-tight\">Temukan Perusahaan Impian Anda</h1>\r\n          <p className=\"mt-3 max-w-2xl mx-auto text-lg text-gray-600 dark:text-gray-300\">\r\n            Jelajahi profil perusahaan-perusahaan inovatif dan temukan budaya kerja yang cocok untuk Anda.\r\n          </p>\r\n        </div>\r\n\r\n        <SearchBar placeholder=\"Cari nama perusahaan...\" basePath=\"/companies\" />\r\n        \r\n        <div className=\"my-8\">\r\n            <CompanyCategoryFilters />\r\n        </div>\r\n\r\n        <section>\r\n          {companiesForDisplay.length > 0 ? (\r\n            <>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-6\">\r\n                Menampilkan <span className=\"font-bold text-gray-800 dark:text-white\">{companiesForDisplay.length}</span> dari{' '}\r\n                <span className=\"font-bold text-gray-800 dark:text-white\">{totalCompanies}</span> perusahaan.\r\n              </p>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                {/* Gunakan data yang sudah ditransformasi dan aman secara tipe */}\r\n                {companiesForDisplay.map((company) => (\r\n                  <CompanyCard key={company.id} company={company} />\r\n                ))}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-center py-20 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <h3 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Perusahaan Tidak Ditemukan</h3>\r\n              <p className=\"text-gray-500 dark:text-gray-400 mt-2\">Coba gunakan kata kunci pencarian atau filter yang lain.</p>\r\n            </div>\r\n          )}\r\n        </section>\r\n\r\n        {totalPages > 1 && (\r\n          <div className=\"mt-12\">\r\n            <Pagination totalPages={totalPages} currentPage={currentPage} />\r\n          </div>\r\n        )}\r\n\r\n        {itJobs.length > 0 && (\r\n          <section className=\"mt-20\">\r\n            <SectionTitle title=\"Lowongan IT di Berbagai Perusahaan\" subtitle=\"Peluang teratas di bidang teknologi menanti Anda.\" />\r\n            <div className=\"mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              {itJobs.map((job) => (\r\n                <JobCard key={job.id} job={job} />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        <RecommendedJobs />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}