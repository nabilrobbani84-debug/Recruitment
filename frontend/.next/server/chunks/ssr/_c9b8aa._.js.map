{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/services/jobService.ts"],"sourcesContent":["// src/services/jobService.ts\r\n\r\n// --- DEFINISI TIPE YANG KONSISTEN ---\r\n// Tipe ini akan menjadi satu-satunya sumber kebenaran dan digunakan di semua komponen.\r\n// src/services/jobService.ts\r\n\r\nexport interface ICompany {\r\n  id: number | string;\r\n  name: string;\r\n  logoUrl: string;\r\n}\r\n\r\n// --- Definisi Tipe untuk Data Pekerjaan (Single Source of Truth) ---\r\nexport interface IJob {\r\n  id: number | string;\r\n  title: string;\r\n  company: {\r\n    name: string;\r\n    logoUrl?: string;\r\n  };\r\n  location: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  postedAt: string; // ISO string date\r\n  salaryMin?: number;\r\n  salaryMax?: number;\r\n}\r\n\r\nexport interface IJobDetail {\r\n  id: number | string;\r\n  title: string;\r\n  type: 'Full-time' | 'Part-time' | 'Contract' | 'Internship';\r\n  location: string;\r\n  description: string;\r\n  responsibilities: string[];\r\n  qualifications: string[];\r\n  postedDate: string; // ISO String\r\n  company: ICompany;\r\n}\r\n\r\n// Tipe untuk respons API yang hanya berisi daftar pekerjaan\r\nexport interface IJobsResponse {\r\n  data: IJob[];\r\n}\r\n\r\nconst mockJobDatabase: IJobDetail[] = [\r\n    { \r\n        id: 1, \r\n        title: \"Senior Frontend Developer (React)\", \r\n        type: \"Full-time\", \r\n        location: \"Jakarta, Indonesia (Hybrid)\",\r\n        description: \"Kami mencari seorang Frontend Developer berpengalaman untuk memimpin pengembangan antarmuka pengguna yang inovatif dan berperforma tinggi. Anda akan berkolaborasi erat dengan tim produk, desainer UI/UX, dan backend engineer untuk mengubah visi menjadi produk nyata yang digunakan oleh jutaan orang.\",\r\n        responsibilities: [\r\n            \"Mengembangkan dan memelihara komponen UI yang reusable dan efisien menggunakan React.js dan TypeScript.\",\r\n            \"Menerjemahkan desain dan wireframe dari Figma menjadi kode berkualitas tinggi.\",\r\n            \"Mengoptimalkan komponen untuk kecepatan dan skalabilitas maksimum di berbagai perangkat dan browser.\",\r\n            \"Berkolaborasi dengan backend developer untuk mengintegrasikan RESTful API dan GraphQL.\",\r\n            \"Menulis pengujian unit dan integrasi untuk memastikan kualitas dan keandalan kode.\"\r\n        ],\r\n        qualifications: [\r\n            \"Gelar Sarjana di bidang Ilmu Komputer atau bidang terkait.\",\r\n            \"Pengalaman minimal 4 tahun dalam pengembangan frontend.\",\r\n            \"Keahlian mendalam pada React.js, TypeScript, HTML5, dan CSS3/SASS.\",\r\n            \"Pengalaman dengan state management library seperti Redux Toolkit atau Zustand.\",\r\n            \"Memahami prinsip-prinsip desain responsif dan mobile-first.\"\r\n        ],\r\n        postedDate: \"2025-08-01T10:00:00Z\",\r\n        company: { id: 1, name: \"PT Teknologi Bersama\", logoUrl: \"https://placehold.co/128x128/000000/FFFFFF?text=TB\" }\r\n    },\r\n    { \r\n        id: 2, \r\n        title: \"UI/UX Designer\", \r\n        type: \"Contract\", \r\n        location: \"Surabaya, Indonesia\",\r\n        description: \"Bergabunglah dengan tim kami untuk merancang pengalaman pengguna yang intuitif dan menarik secara visual untuk produk keuangan kami. Anda akan bertanggung jawab atas seluruh proses desain, dari riset hingga prototipe interaktif.\",\r\n        responsibilities: [\r\n            \"Melakukan riset pengguna untuk memahami kebutuhan dan masalah.\",\r\n            \"Membuat wireframe, user flow, dan prototipe interaktif.\",\r\n            \"Merancang antarmuka yang indah dan fungsional.\",\r\n            \"Berkolaborasi dengan tim produk dan engineer.\"\r\n        ],\r\n        qualifications: [\r\n            \"Portofolio yang kuat dalam desain UI/UX.\",\r\n            \"Mahir menggunakan Figma, Sketch, atau Adobe XD.\",\r\n            \"Pengalaman dengan design systems.\",\r\n            \"Kemampuan komunikasi yang baik.\"\r\n        ],\r\n        postedDate: \"2025-07-28T14:30:00Z\",\r\n        company: { id: 2, name: \"Solusi Keuangan Nusantara\", logoUrl: \"https://placehold.co/128x128/1d4ed8/FFFFFF?text=SKN\" }\r\n    },\r\n];\r\n\r\n// --- PERBAIKAN: Membuat dan mengekspor fungsi getFeaturedJobs ---\r\n/**\r\n * Mengambil data pekerjaan unggulan (featured jobs) dari API.\r\n * @param params - Objek filter, misalnya kategori atau limit.\r\n * @returns Promise yang berisi daftar pekerjaan unggulan.\r\n */\r\nexport const getFeaturedJobs = async (params: { category?: string; limit?: number }): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching featured jobs with params:\", params);\r\n  try {\r\n    const limit = params.limit || 4;\r\n\r\n    // Simulasi data pekerjaan unggulan\r\n    const mockJobs: IJob[] = Array.from({ length: limit }, (_, i) => ({\r\n      id: 200 + i,\r\n      title: `Senior ${params.category?.toUpperCase() || 'Tech'} Engineer #${i + 1}`,\r\n      company: { name: `Innovate Solutions ${i + 1}` },\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 48).toISOString(),\r\n      salaryMin: 15000000,\r\n    }));\r\n\r\n    // Simulasi penundaan jaringan\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    // Mengembalikan data dengan struktur yang diharapkan\r\n    return {\r\n      data: mockJobs\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching featured jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan unggulan.');\r\n  }\r\n};\r\n\r\nexport async function getAllJobIds() {\r\n    // Di aplikasi nyata, ini bisa berupa query API yang lebih efisien.\r\n    return mockJobDatabase.map(job => ({\r\n        id: job.id.toString(),\r\n    }));\r\n}\r\n\r\nexport async function getJobDetails(id: string): Promise<IJobDetail | null> {\r\n    console.log(`[SERVICE] Mencari detail untuk pekerjaan dengan ID: ${id}`);\r\n    // Simulasi penundaan jaringan seperti memanggil API sungguhan\r\n    await new Promise(resolve => setTimeout(resolve, 100)); \r\n    const job = mockJobDatabase.find(j => j.id.toString() === id);\r\n    return job || null;\r\n}\r\n// Anda juga bisa menambahkan fungsi getAllJobs di sini jika belum ada\r\n// export const getAllJobs = async (...) => { ... };\r\n\r\n\r\n// Tipe untuk metadata pagination dari API\r\nexport interface IPaginationMeta {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  perPage: number;\r\n}\r\n\r\n// Tipe untuk keseluruhan respons API\r\nexport interface IJobApiResponse {\r\n  data: IJob[];\r\n  meta: IPaginationMeta;\r\n}\r\n\r\n// Tipe untuk filter yang dikirim ke API\r\ninterface JobFilters {\r\n  keyword?: string;\r\n  location?: string;\r\n  type?: string;\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\nexport const getRecommendedJobs = async (): Promise<IJobsResponse> => {\r\n  console.log(\"Fetching recommended jobs for authenticated user...\");\r\n  try {\r\n    // Simulasi data rekomendasi yang beragam\r\n    const mockJobs: IJob[] = [\r\n      { id: 301, title: 'Data Scientist (AI Focus)', company: { name: 'Data Insights Co.' }, location: 'Yogyakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 18000000 },\r\n      { id: 302, title: 'Senior Product Manager', company: { name: 'Agile Product House' }, location: 'Jakarta', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 25000000 },\r\n      { id: 303, title: 'Cloud DevOps Engineer (AWS)', company: { name: 'CloudNet Solutions' }, location: 'Remote', type: 'Contract', postedAt: new Date().toISOString() },\r\n      { id: 304, title: 'Lead Mobile Developer (React Native)', company: { name: 'MobileFirst Apps' }, location: 'Bandung', type: 'Full-time', postedAt: new Date().toISOString(), salaryMin: 22000000 },\r\n    ];\r\n    // Simulasi penundaan jaringan agar loading spinner terlihat\r\n    await new Promise(resolve => setTimeout(resolve, 800)); \r\n    return { data: mockJobs };\r\n  } catch (error) {\r\n    console.error('Error fetching recommended jobs:', error);\r\n    throw new Error('Gagal mengambil data pekerjaan rekomendasi.');\r\n  }\r\n};\r\n/**\r\n * Mengambil data pekerjaan dari API dengan filter dan pagination.\r\n */\r\nexport const getAllJobs = async (filters: JobFilters = {}): Promise<IJobApiResponse> => {\r\n  console.log(\"Fetching jobs with filters:\", filters);\r\n  try {\r\n    const page = filters.page || 1;\r\n    const limit = filters.limit || 5; // Tampilkan 5 pekerjaan per halaman\r\n\r\n    // --- Data Placeholder untuk simulasi ---\r\n    const mockJobs: IJob[] = Array.from({ length: 23 }, (_, i) => ({\r\n      id: i + 1,\r\n      title: `Software Engineer #${i + 1}`,\r\n      company: { name: `Tech Company ${i % 5}` },\r\n      location: i % 3 === 0 ? 'Jakarta' : 'Remote',\r\n      type: 'Full-time',\r\n      postedAt: new Date(Date.now() - i * 1000 * 60 * 60 * 24).toISOString(),\r\n      description: 'Deskripsi pekerjaan yang menarik.'\r\n    }));\r\n\r\n    // Simulasi filter\r\n    const filteredJobs = mockJobs.filter(job => {\r\n        const keywordMatch = filters.keyword ? job.title.toLowerCase().includes(filters.keyword.toLowerCase()) : true;\r\n        // ... tambahkan logika filter lain\r\n        return keywordMatch;\r\n    });\r\n\r\n    const totalItems = filteredJobs.length;\r\n    const totalPages = Math.ceil(totalItems / limit);\r\n    const paginatedData = filteredJobs.slice((page - 1) * limit, page * limit);\r\n    \r\n    // Simulasi respons API\r\n    return await Promise.resolve({\r\n      data: paginatedData,\r\n      meta: {\r\n        currentPage: page,\r\n        totalPages: totalPages,\r\n        totalItems: totalItems,\r\n        perPage: limit,\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching jobs:', error);\r\n    throw error;\r\n  }\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobCard.tsx"],"sourcesContent":["// src/components/job/JobCard.tsx\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\n// --- PERBAIKAN: Gunakan tipe IJob yang konsisten dari service ---\r\nimport type { IJob } from '@/services/jobService';\r\nimport { MapPin, Briefcase, Clock, Building } from 'lucide-react';\r\n\r\n// Fungsi helper untuk format waktu yang lebih informatif\r\nconst timeAgo = (dateString: string): string => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\r\n  let interval = seconds / 31536000;\r\n  if (interval > 1) return Math.floor(interval) + \" tahun lalu\";\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) return Math.floor(interval) + \" bulan lalu\";\r\n  interval = seconds / 86400;\r\n  if (interval > 1) return Math.floor(interval) + \" hari lalu\";\r\n  interval = seconds / 3600;\r\n  if (interval > 1) return Math.floor(interval) + \" jam lalu\";\r\n  interval = seconds / 60;\r\n  if (interval > 1) return Math.floor(interval) + \" menit lalu\";\r\n  return \"Baru saja\";\r\n};\r\n\r\n// --- PERBAIKAN: Pastikan prop `job` menggunakan tipe IJob ---\r\nexport const JobCard = ({ job }: { job: IJob }) => {\r\n  return (\r\n    <Link href={`/jobs/${job.id}`} className=\"block p-5 bg-white border border-gray-200 rounded-lg shadow-sm hover:border-blue-600 hover:shadow-lg transition-all duration-300 ease-in-out\">\r\n      <div className=\"flex items-start gap-4\">\r\n        <div className=\"flex-shrink-0\">\r\n          <img\r\n            className=\"w-16 h-16 bg-gray-100 rounded-md object-cover border\"\r\n            // --- PERBAIKAN: Akses properti logo dari `job.company.logoUrl` ---\r\n            src={job.company?.logoUrl || `https://ui-avatars.com/api/?name=${job.company?.name?.charAt(0)}&background=f0f4ff&color=4f46e5`}\r\n            alt={`${job.company?.name} logo`}\r\n            width={64}\r\n            height={64}\r\n          />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          {/* --- PERBAIKAN: Akses nama perusahaan dari `job.company.name` --- */}\r\n          <p className=\"text-sm font-semibold text-blue-600 flex items-center gap-1.5\"><Building size={14} /> {job.company?.name || 'Perusahaan'}</p>\r\n          <h3 className=\"text-lg font-bold text-gray-900 mt-1 hover:text-blue-700\">{job.title}</h3>\r\n          <div className=\"mt-3 flex flex-wrap gap-x-5 gap-y-2 text-sm text-gray-500\">\r\n            {job.location && <span className=\"flex items-center gap-1.5\"><MapPin size={14} /> {job.location}</span>}\r\n            {job.type && <span className=\"flex items-center gap-1.5\"><Briefcase size={14} /> {job.type}</span>}\r\n            {job.postedAt && <span className=\"flex items-center gap-1.5\"><Clock size={14} /> {timeAgo(job.postedAt)}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AAGA;AAAA;AAAA;AAAA;;;;AAEA,yDAAyD;AACzD,MAAM,UAAU,CAAC;IACf,IAAI,CAAC,YAAY,OAAO;IACxB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IACrE,IAAI,WAAW,UAAU;IACzB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,OAAO;AACT;AAGO,MAAM,UAAU,CAAC,EAAE,GAAG,EAAiB;IAC5C,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAAE,WAAU;kBACvC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAU;wBACV,oEAAoE;wBACpE,KAAK,IAAI,OAAO,EAAE,WAAW,CAAC,iCAAiC,EAAE,IAAI,OAAO,EAAE,MAAM,OAAO,GAAG,+BAA+B,CAAC;wBAC9H,KAAK,GAAG,IAAI,OAAO,EAAE,KAAK,KAAK,CAAC;wBAChC,OAAO;wBACP,QAAQ;;;;;;;;;;;8BAGZ,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAE,WAAU;;8CAAgE,8OAAC,0MAAA,CAAA,WAAQ;oCAAC,MAAM;;;;;;gCAAM;gCAAE,IAAI,OAAO,EAAE,QAAQ;;;;;;;sCAC1H,8OAAC;4BAAG,WAAU;sCAA4D,IAAI,KAAK;;;;;;sCACnF,8OAAC;4BAAI,WAAU;;gCACZ,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,0MAAA,CAAA,SAAM;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,QAAQ;;;;;;;gCAC9F,IAAI,IAAI,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,4MAAA,CAAA,YAAS;4CAAC,MAAM;;;;;;wCAAM;wCAAE,IAAI,IAAI;;;;;;;gCACzF,IAAI,QAAQ,kBAAI,8OAAC;oCAAK,WAAU;;sDAA4B,8OAAC,oMAAA,CAAA,QAAK;4CAAC,MAAM;;;;;;wCAAM;wCAAE,QAAQ,IAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlH"}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/lib/utils.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\n/**\r\n * A utility function to conditionally join class names together.\r\n * It uses 'clsx' to handle conditional classes and 'tailwind-merge'\r\n * to intelligently merge Tailwind CSS classes without style conflicts.\r\n *\r\n * @param {...ClassValue[]} inputs - A list of class values to be merged.\r\n * These can be strings, arrays, or objects.\r\n * @returns {string} A single string of merged and optimized class names.\r\n */\r\nexport function cn(...inputs: ClassValue[]): string {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n// src/lib/utils.ts\r\nexport const timeAgo = (dateString: string): string => {\r\n  const date = new Date(dateString);\r\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\r\n  let interval = seconds / 31536000;\r\n  if (interval > 1) return Math.floor(interval) + \" tahun lalu\";\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) return Math.floor(interval) + \" bulan lalu\";\r\n  interval = seconds / 86400;\r\n  if (interval > 1) return Math.floor(interval) + \" hari lalu\";\r\n  interval = seconds / 3600;\r\n  if (interval > 1) return Math.floor(interval) + \" jam lalu\";\r\n  interval = seconds / 60;\r\n  if (interval > 1) return Math.floor(interval) + \" menit lalu\";\r\n  return \"Baru saja\";\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;;;AAWO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,MAAM,UAAU,CAAC;IACtB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAU,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;IACrE,IAAI,WAAW,UAAU;IACzB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,WAAW,UAAU;IACrB,IAAI,WAAW,GAAG,OAAO,KAAK,KAAK,CAAC,YAAY;IAChD,OAAO;AACT"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/ui/Alert.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { AlertTriangle, CheckCircle, Info, XCircle } from \"lucide-react\";\r\n\r\nconst alertVariants = tv({\r\n  base: \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-8 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  variants: {\r\n    variant: {\r\n      default: \"bg-background text-foreground\",\r\n      destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      success: \"border-green-500/50 text-green-600 dark:border-green-500 [&>svg]:text-green-500\",\r\n      info: \"border-blue-500/50 text-blue-600 dark:border-blue-500 [&>svg]:text-blue-500\",\r\n      warning: \"border-yellow-500/50 text-yellow-600 dark:border-yellow-500 [&>svg]:text-yellow-500\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nconst alertIcons = {\r\n  default: Info,\r\n  destructive: XCircle,\r\n  success: CheckCircle,\r\n  info: Info,\r\n  warning: AlertTriangle,\r\n};\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  const Icon = alertIcons[variant || \"default\"];\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props}\r\n    >\r\n      <Icon className=\"h-5 w-5\" />\r\n      {/* The children, like AlertTitle and AlertDescription, will be rendered here */}\r\n      <div className=\"ml-2\">{props.children}</div>\r\n    </div>\r\n  );\r\n});\r\nAlert.displayName = \"Alert\";\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-bold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertTitle.displayName = \"AlertTitle\";\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDescription.displayName = \"AlertDescription\";\r\n\r\nexport { Alert, AlertTitle, AlertDescription };"],"names":[],"mappings":";;;;;;AAAA;AAEA;AADA;AAEA;AAAA;AAAA;AAAA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,qJAAA,CAAA,KAAE,AAAD,EAAE;IACvB,MAAM;IACN,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,MAAM;YACN,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAEA,MAAM,aAAa;IACjB,SAAS,kMAAA,CAAA,OAAI;IACb,aAAa,4MAAA,CAAA,UAAO;IACpB,SAAS,2NAAA,CAAA,cAAW;IACpB,MAAM,kMAAA,CAAA,OAAI;IACV,SAAS,wNAAA,CAAA,gBAAa;AACxB;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,MAAM,OAAO,UAAU,CAAC,WAAW,UAAU;IAC7C,qBACE,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;;;;;;0BAEhB,8OAAC;gBAAI,WAAU;0BAAQ,MAAM,QAAQ;;;;;;;;;;;;AAG3C;AACA,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,8CAA8C;QAC3D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,6GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobList.tsx"],"sourcesContent":["// src/components/job/JobList.tsx\r\n\r\nimport React from 'react';\r\nimport type { IJob } from '@/services/jobService';\r\n\r\n// --- PERBAIKAN: Impor komponen dengan path dan nama yang benar ---\r\nimport { JobCard } from '@/component/job/JobCard';\r\nimport { Alert, AlertTitle, AlertDescription } from '@/component/ui/Alert';\r\n\r\ninterface JobListProps {\r\n  // Prop jobs wajib ada, karena penanganan null/error dilakukan di komponen induk (page.tsx)\r\n  jobs: IJob[];\r\n}\r\n\r\nconst JobList: React.FC<JobListProps> = ({ jobs }) => { \r\n  // Kondisi jika array `jobs` kosong setelah fetch data berhasil\r\n  if (!jobs || jobs.length === 0) {\r\n    return (\r\n      // --- PERBAIKAN: Menggunakan komponen Alert yang komposabel ---\r\n      <Alert variant=\"info\">\r\n        <AlertTitle>Tidak Ada Lowongan Ditemukan</AlertTitle>\r\n        <AlertDescription>\r\n          Coba ubah filter pencarian Anda atau periksa kembali nanti.\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  // Merender daftar pekerjaan jika data tersedia\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {jobs.map(job => (\r\n        // Komponen JobCard kini menerima prop `job` dengan tipe IJob yang benar\r\n        <JobCard key={job.id} job={job} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAKjC,oEAAoE;AACpE;AACA;;;;AAOA,MAAM,UAAkC,CAAC,EAAE,IAAI,EAAE;IAC/C,+DAA+D;IAC/D,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,OACE,gEAAgE;sBAChE,8OAAC,yHAAA,CAAA,QAAK;YAAC,SAAQ;;8BACb,8OAAC,yHAAA,CAAA,aAAU;8BAAC;;;;;;8BACZ,8OAAC,yHAAA,CAAA,mBAAgB;8BAAC;;;;;;;;;;;;IAKxB;IAEA,+CAA+C;IAC/C,qBACE,8OAAC;QAAI,WAAU;kBACZ,KAAK,GAAG,CAAC,CAAA,MACR,wEAAwE;0BACxE,8OAAC,4HAAA,CAAA,UAAO;gBAAc,KAAK;eAAb,IAAI,EAAE;;;;;;;;;;AAI5B;uCAEe"}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pagination = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pagination() from the server but Pagination is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/Pagination.tsx <module evaluation>\",\n    \"Pagination\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iEACA"}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/common/Pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Pagination = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pagination() from the server but Pagination is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/common/Pagination.tsx\",\n    \"Pagination\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6CACA"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobFilter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/component/job/JobFilter.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/job/JobFilter.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA"}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/component/job/JobFilter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/component/job/JobFilter.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/component/job/JobFilter.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA"}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ASUS/Documents/my-project/Recruitment-main/Recruitment/frontend/app/jobs/page.tsx"],"sourcesContent":["import { getAllJobs, type IJob, type IPaginationMeta } from '@/services/jobService';\r\nimport JobList from '@/component/job/JobList';\r\nimport { Pagination } from '@/component/common/Pagination';\r\n// Correctly import all parts of the Alert component\r\nimport { Alert, AlertDescription, AlertTitle } from '@/component/ui/Alert'; \r\nimport JobFilter from '@/component/job/JobFilter';\r\n\r\ninterface JobsPageProps {\r\n  searchParams: { [key: string]: string | string[] | undefined };\r\n}\r\n\r\nexport default async function JobsPage({ searchParams }: JobsPageProps) {\r\n  const currentPage = Number(searchParams.page) || 1;\r\n  const keyword = searchParams.keyword as string | undefined;\r\n  const location = searchParams.location as string | undefined;\r\n  const type = searchParams.type as string | undefined;\r\n\r\n  let jobs: IJob[] = [];\r\n  let paginationMeta: IPaginationMeta | null = null;\r\n  let fetchError: string | null = null;\r\n\r\n  try {\r\n    const response = await getAllJobs({\r\n      page: currentPage,\r\n      keyword,\r\n      location,\r\n      type,\r\n    });\r\n    jobs = response.data;\r\n    paginationMeta = response.meta;\r\n  } catch (error) {\r\n    console.error(\"JobsPage Fetch Error:\", error);\r\n    fetchError = \"Gagal memuat data lowongan. Silakan coba beberapa saat lagi.\";\r\n  }\r\n\r\n  return (\r\n    <main className=\"container mx-auto py-8 lg:py-12\">\r\n      <div className=\"mb-10 text-center\">\r\n        <h1 className=\"text-4xl font-extrabold tracking-tight lg:text-5xl\">Temukan Pekerjaan Impian Anda</h1>\r\n        <p className=\"text-lg text-muted-foreground mt-3 max-w-2xl mx-auto\">\r\n          Jelajahi ribuan lowongan dari berbagai perusahaan ternama di seluruh Indonesia.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n        <aside className=\"lg:col-span-1\">\r\n          <div className=\"sticky top-24\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">Filter Pencarian</h2>\r\n            {/* Pass server-side searchParams as initial state to the client component */}\r\n            <JobFilter initialFilters={{ keyword, location, type }} />\r\n          </div>\r\n        </aside>\r\n\r\n        <section className=\"lg:col-span-3\">\r\n          {fetchError ? (\r\n            // --- FIX: Use the Alert component with its child components ---\r\n            <Alert variant=\"destructive\">\r\n              <AlertTitle>Terjadi Kesalahan Server</AlertTitle>\r\n              <AlertDescription>{fetchError}</AlertDescription>\r\n            </Alert>\r\n          ) : (\r\n            <>\r\n              <JobList jobs={jobs} />\r\n              {paginationMeta && paginationMeta.totalPages > 1 && (\r\n                <div className=\"mt-10\">\r\n                  <Pagination\r\n                    currentPage={paginationMeta.currentPage}\r\n                    totalPages={paginationMeta.totalPages}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;;;;;;;AAMe,eAAe,SAAS,EAAE,YAAY,EAAiB;IACpE,MAAM,cAAc,OAAO,aAAa,IAAI,KAAK;IACjD,MAAM,UAAU,aAAa,OAAO;IACpC,MAAM,WAAW,aAAa,QAAQ;IACtC,MAAM,OAAO,aAAa,IAAI;IAE9B,IAAI,OAAe,EAAE;IACrB,IAAI,iBAAyC;IAC7C,IAAI,aAA4B;IAEhC,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,aAAU,AAAD,EAAE;YAChC,MAAM;YACN;YACA;YACA;QACF;QACA,OAAO,SAAS,IAAI;QACpB,iBAAiB,SAAS,IAAI;IAChC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,aAAa;IACf;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqD;;;;;;kCACnE,8OAAC;wBAAE,WAAU;kCAAuD;;;;;;;;;;;;0BAKtE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCACf,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAE3C,8OAAC,8HAAA,CAAA,UAAS;oCAAC,gBAAgB;wCAAE;wCAAS;wCAAU;oCAAK;;;;;;;;;;;;;;;;;kCAIzD,8OAAC;wBAAQ,WAAU;kCAChB,aACC,iEAAiE;sCACjE,8OAAC,yHAAA,CAAA,QAAK;4BAAC,SAAQ;;8CACb,8OAAC,yHAAA,CAAA,aAAU;8CAAC;;;;;;8CACZ,8OAAC,yHAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;iDAGrB;;8CACE,8OAAC,4HAAA,CAAA,UAAO;oCAAC,MAAM;;;;;;gCACd,kBAAkB,eAAe,UAAU,GAAG,mBAC7C,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,kIAAA,CAAA,aAAU;wCACT,aAAa,eAAe,WAAW;wCACvC,YAAY,eAAe,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzD"}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}